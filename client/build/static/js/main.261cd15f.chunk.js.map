{"version":3,"sources":["pages/Question.js","components/LogOutButton/logout-button.js","components/LoginButton/login-button.js","components/AuthencationDirectory/authenication-button.js","components/AuthNav/AuthNav.js","pages/Home.js","pages/SignLog.js","utils/API.js","pages/Create.js","components/Button/Button.js","pages/List.js","pages/Character.js","components/NavItems/NavItems.js","components/Nav/Nav.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Questions","nextQuestion","numbernew","makeCharacter","questions","questionText","possibleAnswers","answerText","answerValue","useState","currentQuestion","setCurrentQuetion","showCharacter","setShowCharacter","map","possibleAnswer","onClick","option","Prof","class","length","console","log","LogoutButton","logout","useAuth0","returnTo","window","location","origin","LoginButton","loginWithRedirect","AuthenticationButton","isAuthenticated","Question","AuthNav","Home","SignLog","axios","get","id","delete","charData","post","Create","successMessage","setSuccessMessage","formObject","setFormObject","useForm","handleSubmit","register","handleInputChange","event","target","name","value","handleFormSubmit","r","API","level","hp","strength","dexterity","constitution","intelligence","wisdom","charisma","inventory","background","appearance","then","catch","err","errors","className","onSubmit","onChange","type","placeholder","Button","props","children","List","characters","setCharacters","loadCharacters","res","data","useEffect","to","character","Card","style","width","Body","Title","Subtitle","_id","Text","Details","setCharacter","useParams","NavItems","title","path","icon","cName","Nav","sideNav","setSideNav","showSideNav","item","index","Footer","rel","href","App","domain","clientId","redirectUri","exact","Character","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","process","REACT_APP_AUTH0_DOMAIN","REACT_APP_AUTH0_CLIENT_ID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.261cd15f.chunk.js","sourcesContent":["\nimport React ,{useState,useEffect} from 'react';\n\nfunction Questions() {\n\n\n    const questions = [\n        {\n            questionText: `Welcome {Adventurer} to Dungeons and Dragons!, How exciting you decided to join us. lets start by making a character the best to do that to pick a role. what would you like to do?`,\n            possibleAnswers: [\n                {answerText:\"Strong\",answerValue:\"Str\" },\n                {answerText:\"Nimble\",answerValue:\"Dex\" },\n                {answerText:\"Mystical\",answerValue:\"Int\" }\n            ]\n        },\n        {\n            questionText: `Excellent choice {Adventurer} now being from what classes would you wanna play?`,\n            possibleAnswers: [\n                 {answerText: \"Barbarian\", answerValue:\"barbarian\"},       \n                 {answerText: \"fighter\", answerValue:\"fighter\"},       \n                 {answerText: \"paladin\", answerValue:\"paladin\"}    \n            ]\n        \n        },\n        {\n            questionText: `Excellent choice {Adventurer} now being from what classes would you wanna play?`,\n            possibleAnswers: [\n                 {answerText: \"rogue\", answerValue:\"rogue\"},       \n                 {answerText: \"ranger\", answerValue:\"ranger\"},       \n                 {answerText: \"monk\", answerValue:\"monk\"}    \n            ]\n        },\n        {\n            questionText: `Excellent choice {Adventurer} now being from what classes would you wanna play?`,\n            possibleAnswers: [\n                 {answerText: \"sorcerer\", answerValue:\"sorcerer\"},       \n                 {answerText: \"wizard\", answerValue:\"wizard\"},       \n                 {answerText: \"warlock\", answerValue:\"warlock\"},    \n    \n            ]\n        },\n        {\n            questionText: `a fine choice indeed playing a {} with just great {}! now what name should there character have?`,\n            possibleAnswers: [\n                 {answerText: \"sorcerer\", answerValue:\"sorcerer\"},       \n                 {answerText: \"wizard\", answerValue:\"wizard\"},       \n                 {answerText: \"warlock\", answerValue:\"warlock\"}    \n            ]\n        }\n    ]\n\n\n    const [currentQuestion,setCurrentQuetion] = useState(0);\n    const [showCharacter,setShowCharacter] = useState([]\n\n    );\n    let nextQuestion;\n    let numbernew;\n    let makeCharacter;\n    const handleButtonClicked = (option) =>{\n\n        if(option == \"Dex\"){\n            numbernew = 2;\n            makeCharacter = {...showCharacter, Prof: option};\n        }\n       else if(option == \"Str\"){\n            numbernew = 1;\n            makeCharacter = {...showCharacter, Prof: option};\n        }\n        else if(option == \"Int\"){\n            numbernew = 3;\n            makeCharacter = {...showCharacter, Prof: option};\n        }\n        else {\n            makeCharacter = {...showCharacter, class: option};\n\n        }\n        nextQuestion = currentQuestion + numbernew;\n\n        \n        \n        if(nextQuestion < questions.length){\n        setCurrentQuetion(nextQuestion)\n        setShowCharacter(makeCharacter)\n        } else {\n            console.log(makeCharacter)\n        \n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <span>Hello</span>\n            </div>\n            <div>\n                {questions[currentQuestion].questionText}\n            </div>\n            <div>\n            {questions[currentQuestion].possibleAnswers.map(( possibleAnswer ) => {return (<button onClick={()=>{handleButtonClicked(possibleAnswer.answerValue)}}> {possibleAnswer.answerText} </button>)})  }\n            </div>\n        </div>\n    )\n}\n\nexport default Questions\n","import React from \"react\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n    const {logout} = useAuth0()\n\n    return(\n\n        <button onClick = {() =>{\n            logout({\n                returnTo: window.location.origin\n\n            })\n        }}>\n            Log Out\n\n        </button>\n\n\n    )\n}\n\nexport default LogoutButton;","import React from \"react\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n    const {loginWithRedirect} = useAuth0()\n\n    return(\n\n        <button onClick = {() =>{\n            loginWithRedirect()\n        }}>\n            Log In\n\n        </button>\n\n\n    )\n}\n\nexport default LoginButton;","import React from \"react\";\nimport LogoutButton from \"../LogOutButton/logout-button\";\nimport LoginButton from \"../LoginButton/login-button\";\nimport {useAuth0} from '@auth0/auth0-react';\nimport Question from \"../../pages/Question\";\n\n\n\nconst AuthenticationButton = () => {\n    const { isAuthenticated} = useAuth0();\n    console.log(isAuthenticated);\n    \n    return isAuthenticated ? \n<><LogoutButton /><Question /> </> : <LoginButton /> \n}\n\n\nexport default AuthenticationButton;","import React from \"react\";\nimport AuthenticationButton from \"../AuthencationDirectory/authenication-button\";\n\nconst AuthNav = () => {\n    return  <AuthenticationButton />\n    \n}\n\nexport default AuthNav;","import React from 'react'\n// import Nav from '../components/Nav'\nimport Question from \"./Question\"\nimport AuthNav from \"../components/AuthNav/AuthNav\"\nimport {Auth0Provider, useAuth0} from\"@auth0/auth0-react\";\n\nfunction Home() {\n    const {isAuthenticated} = useAuth0();\n    return (\n        <div>\n                <h1>Hello and Welcome! to Hall of Heroes</h1>\n        </div>\n        \n    )\n}\n\nexport default Home\n","import React from 'react'\nimport AuthNav from \"../components/AuthNav/AuthNav\"\n\nfunction SignLog() {\n    return (\n        <div>\n         <AuthNav />\n\n        </div>\n    )\n}\n\nexport default SignLog\n","import axios from \"axios\";\n\nexport default {\n    getCharacters: () => {\n        return axios.get('/api/characters');\n    },\n    getCharacter: (id) =>{\n        return axios.get('/api/characters/' + id);\n    },\n    deleteCharacter: (id) =>{\n        return axios.delete('/api/characters/' + id);\n    },\n\n    saveCharacter: (charData) => {\n        return axios.post('/api/characters', charData);\n    },\n}","import React, { useEffect, useState, useParams } from 'react'\n// import Button from '../components/Button/Button'\n// import Modal from '../components/Modal/Modal.js'\nimport API from \"../utils/API\"\nimport {useForm} from \"react-hook-form\";\n\n// get data and display.\nfunction Create() {\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    const [character, setCharacter] = useState([])\n    const [formObject, setFormObject]= useState({})\n    const {register, handleSubmit, errors}= useForm();\n\n    function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n    };\n\n    \n        \n    function handleFormSubmit(event,r) {\n        // event.preventDefault();\n        if (formObject.name && formObject.class) {\n            API.saveCharacter({\n                name: formObject.name,\n                class: formObject.class,\n                level: formObject.level,\n                hp: formObject.hp,\n                strength: formObject.strength,\n                dexterity: formObject.dexterity,\n                constitution: formObject.constitution,\n                intelligence: formObject.intelligence,\n                wisdom: formObject.wisdom,\n                charisma: formObject.charisma,\n                inventory: formObject.inventory,\n                background: formObject.background,\n                appearance: formObject.appearance,\n\n      })\n      .then(() => {\n          setSuccessMessage(\"New character created successfully!!\");\n        }).catch(err => console.log(err));\n    }\n    };\n    return (\n        <div className=\"Create\">\n            <div className=\"text-center\">\n                <h1>Create character</h1>\n                <span className=\"success-message\">{successMessage}</span>\n            </div>\n            <div className=\"container\">\n                <form onSubmit ={handleSubmit(handleFormSubmit)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6 col-xs-12\">\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Character name\"\n                            name=\"name\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please Name your character.\",\n                            //         maxLength: {\n                            //             value: 30,\n                            //             message: \"Please enter a name with fewer than 30 characters\"\n                            //         }\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"class\"\n                            name=\"class\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"level\"\n                            name=\"level\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"hit points\"\n                            name=\"hp\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"Strength\"\n                            name=\"strength\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"dexterity\"\n                            name=\"dexterity\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"constitution\"\n                            name=\"constitution\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"intelligence\"\n                            name=\"intelligence\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"wisdom\"\n                            name=\"wisdom\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"charisma\"\n                            name=\"charisma\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"what items and gold does your character have?\"\n                            name=\"inventory\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"What is your character's background\"\n                            name=\"background\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input \n                            onChange={handleInputChange}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Describe your character's appearance.\"\n                            name=\"appearance\"\n                            // ref={\n                            //     register({\n                            //         required: \"Please name your character\"\n                            //     })\n                            // }\n                            />\n                            <div className=\"line\"></div>\n                        </div>\n                        <button className=\"btn-main-offer create-btn\" onClick={handleFormSubmit} type=\"submit\">create character</button>\n                    </div>\n                </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Create","import React from 'react'\n\nfunction Button({ children }, props) {\n    return (\n        <div>\n            <button {...props}>{children}</button>\n        </div>\n    )\n}\n\nexport default Button\n","import React, { useEffect, useState } from 'react'\nimport Card from 'react-bootstrap/card';\nimport Button from '../components/Button/Button'\nimport API from \"../utils/API\"\nimport { Link } from \"react-router-dom\"\nimport {useAuth0} from\"@auth0/auth0-react\";\n\nconst List = () => {\n    const {isAuthenticated} = useAuth0();\n    const [characters, setCharacters] = useState([])\n\n    useEffect(() => {\n        loadCharacters()\n    }, [])\n\n    //loading all characters and setting with setCharacters\n    function loadCharacters() {\n        API.getCharacters()\n            .then(res =>\n                setCharacters(res.data)\n            )\n            .catch(err => console.log(err));\n\n    };\n\n    //deletes character(s) with given id\n    function deleteCharacter(id) {\n        API.deleteCharacter(id)\n            .then(res => loadCharacters())\n            .catch(err => console.log(err))\n    }\n\n\n    return (\n        isAuthenticated && (\n\n        <div>\n            <Link className={`go-to-create`} to=\"/create\">Create New Character!</Link>\n            {characters.map(character => (\n                <Card style={{ width: '18rem' }} key={character._id}>\n                    <Card.Body>\n                        <Card.Title>{character.name}</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Class:{character.class}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Level:{character.level}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\">ID:{character._id}</Card.Subtitle>\n                        <Card.Text>{character.background}</Card.Text>\n                        <Button onClick={() => deleteCharacter(console.log(character._id))}>Delete</Button>\n                        <Link to={\"/characters/\" + character._id}> View Character Sheet</Link>\n                    </Card.Body>\n                </Card>\n            ))}\n            {/* {characters.map((char) => {\n                return (\n                    <Card style={{ width: '18rem' }} key={char._id}>\n                        <Card.Body>\n                            <Card.Title>{char.name}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">{char.level}</Card.Subtitle>\n                            <Card.Subtitle className=\"mb-2 text-muted\">{char.description}</Card.Subtitle>\n                            <Card.Text>{char.description}</Card.Text>\n                            <Button onClick={() => deleteCharacter(char._id)}>Delete</Button>\n                            <Link to={\"/characters/\" + char._id}> View Character Sheet</Link>\n                        </Card.Body>\n                    </Card>\n                )\n            })} */}\n        </div>\n        )\n    )\n}\n\nexport default List\n// export default () => (<div><Example /></div>)","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\n\nimport API from \"../utils/API\"\n\nconst Details = () => {\n\n  const [character, setCharacter] = useState([])\n\n  //specifies which character we are viewing with id\n  const { id } = useParams()\n\n  console.log(id)\n\n\n\n  function loadCharacter() {\n\n    console.log(id)\n    API.getCharacter(id)\n      .then(res =>\n        setCharacter(res.data)\n      )\n      .catch(err => console.log(err));\n  }\n\n\n  useEffect(() => {\n    loadCharacter()\n  }, [])\n\n  console.log(character._id)\n\n\n  return (\n    <>\n      <h1>Single character sheet here</h1>\n\n\n      <h1>name: {character.name}</h1>\n      <h1>class: {character.class}</h1>\n      <h1>level: {character.level}</h1>\n      <h1>hp: {character.hp}</h1>\n      <h1>strength: {character.strength}</h1>\n      <h1>dexterity: {character.dexterity}</h1>\n      <h1>constitution: {character.constitution}</h1>\n      <h1>intelligence: {character.intelligence}</h1>\n      <h1>wisdom: {character.wisdom}</h1>\n      <h1>charisma: {character.charisma}</h1>\n      <h1>inventory: {character.inventory}</h1>\n      <h1>background: {character.background}</h1>\n      <h1>appearance: {character.appearance}</h1>\n      \n\n\n\n\n    </>\n  )\n}\n\nexport default Details\n","import React from 'react'\n\nimport * as FaIcons from \"react-icons/fa\"\nimport * as AiIcons from \"react-icons/ai\"\nimport * as IoIcons from \"react-icons/io\"\nimport * as FiIcons from \"react-icons/fi\"\n\nexport const NavItems = [\n    {\n        title: 'Home',\n        path: '/',\n        icon: <FaIcons.FaDungeon />,\n        cName: 'navText'\n    },\n    {\n        title: 'View All Characters',\n        path: '/list',\n        icon: <AiIcons.AiOutlineFolderView />,\n        cName: 'navText'\n    },\n    {\n        title: 'Create New Character',\n        path: '/create',\n        icon: <IoIcons.IoIosCreate />,\n        cName: 'navText'\n    },\n    {\n        title: 'Sign Up/Log In',\n        path: '/signlog',\n        icon: <FiIcons.FiLogIn />,\n        cName: 'navText'\n    },\n]","import React, { useState } from \"react\"\nimport AuthNav from \"../AuthNav/AuthNav\"\nimport { Link } from \"react-router-dom\";\n\n// ------Importing NavItems------ //\nimport { NavItems } from \"../NavItems/NavItems\"\n\n// ------Importing Icons from react-icon------ //\nimport * as FaIcons from \"react-icons/fa\"\nimport * as AiIcons from \"react-icons/ai\"\n\nimport './Nav.css'\n\nfunction Nav() {\n\n    // ------Hidden Navbar------ //\n    const [sideNav, setSideNav] = useState(false)\n\n    // ------Display Navbar------ //\n    const showSideNav = () => setSideNav(!sideNav)\n\n    return (\n        <>\n            <div className=\"nav\">\n                {/* ------Hamburger menu Icon------ */}\n                <button className=\"menu-bars\">\n                    <FaIcons.FaBars onClick={showSideNav} />\n                </button>\n            </div>\n            <nav className={sideNav ? 'navMenu active' : 'navMenu'}>\n                <ul className='nav-menu-item' onClick={showSideNav}>\n                    <li className='navbar-toggle'>\n                        {/* ------Close Menu Icon ------ */}\n                        <Link className=\"menu-bars\" to=\"#\">\n                            <AiIcons.AiOutlineClose />\n                        </Link>\n                    </li>\n                    {/* ------Mapping over NavItems------ */}\n                    {NavItems.map((item, index) => {\n                        return (\n                            <li key={index} className={item.cName}>\n                                <Link to={item.path}>\n                                    {item.icon}\n                                    <span>{item.title}</span>\n                                </Link>\n                            </li>\n                        )\n                    })}\n                    <AuthNav />\n                </ul>\n            </nav>\n        </>\n    )\n}\n\nexport default Nav;","import React from \"react\"\nimport './Footer.css'\n\nfunction Footer() {\n    return (\n        <>\n            {/* <div className='phantom' /> */}\n            <footer className='footer'>\n                <p className=\"footerDes\">An application created by University of Denver bootcamp student to create and store characters.</p>\n                <div className=\"group\">\n                    <h4>Contributors</h4>\n                    <ul>\n                        <li  ><a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/domihorinka\">Dominique Horinka</a></li>\n                        <li  ><a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/AlbertTundy\">Stephen Pacyga</a></li>\n                        <li  ><a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/mrivera0014\">Maribel Rivera</a></li>\n                        <li  ><a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/Tevvels\">Christopher Watkins</a></li>\n                    </ul>\n                </div>\n            </footer>\n        </>\n    )\n}\n\nexport default Footer;","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport SignLog from './pages/SignLog'\nimport Create from './pages/Create'\nimport List from './pages/List'\nimport Character from './pages/Character'\nimport Nav from './components/Nav/Nav'\nimport Footer from './components/Footer/Footer'\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nfunction App() {\n  return (\n    <Router>\n       <Auth0Provider\n                           domain={`dev-xypsrewa.us.auth0.com`\n                          }\n                          clientId={`RfFm3fOupR7DPFWKZxVb3TMkruk3EhkY`}\n                          redirectUri={window.location.origin}\n                >\n      <Nav />\n      <Switch>\n       \n\n        <Route exact path={\"/\"} ><Home /></Route>\n\n        <Route exact path={\"/signlog\"} ><SignLog /></Route>\n\n        <Route exact path={\"/create\"} ><Create /></Route>\n\n        <Route exact path={\"/list\"} ><List /></Route>\n\n        <Route exact path=\"/characters/:id\"><Character /></Route>\n      </Switch>\n      <Footer />\n      </Auth0Provider>\n\n    </Router >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\"; \nimport Auth0ProviderWithHistory from \"./auth/auth0-provider-with-history\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Auth0Provider} from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n  <Router>\n    <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}>\n    \n    <App />\n    </Auth0Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}